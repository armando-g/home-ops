---
# yaml-language-server: schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.5.8921-836b34c27@sha256:1a37af82a728ecc28cdcddf54c2fc5aafb01def5f5982c297e1854de9cc5eb56
            env:
              PLEX_ADVERTISE_URL: https://plex.armando.sh:443,http://192.168.60.10:32400
              TZ: America/Chicago
              PLEX_CLAIM: claim-CvnCRbNqn3NzgoKB6sue
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              limits:
                gpu.intel.com/i915: 1
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: "OnRootMismatch"
            runAsNonRoot: true
            supplementalGroups:
              - 65539
    defaultPodOptions:
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: plex
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.60.10
        ports:
          http:
            port: 32400
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.armando.sh
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.media.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }
        hosts:
          - host: "plex.armando.sh"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: *app
      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "192.168.20.5"
            path: "/export/media"
      transcode:
        type: emptyDir
