---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name:  kometa
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: plex
      namespace: media
  values:
    controllers:
      kometa:
        type: cronjob
        annotations:
          reloader.stakater.com/auto: "true"
        cronjob:
          schedule: "0 1 * * *" # Daily at 1 AM
          timeZone: &timeZone America/Chicago
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        # initContainers:
        #   git-sync:
        #     env:
        #       GITSYNC_REPO: https://github.com/jmxd/Kometa
        #       GITSYNC_REF: main
        #       GITSYNC_ROOT: /git
        #       GITSYNC_DEPTH: 1
        #       GITSYNC_ONE_TIME: "true"
        #     image:
        #       repository: registry.k8s.io/git-sync/git-sync
        #       tag: v4.5.0@sha256:0e64aedb0d0ae0a3bab880349a5109b2a31891d646dd61e433ca36ed220dff1f
        #     resources:
        #       requests:
        #         cpu: 10m
        #       limits:
        #         memory: 128Mi
        containers:
          app:
            image:
              repository: kometateam/kometa
              tag: nightly@sha256:a9b2719ac5c318f716ecd281ee11ab1c5669abdd2bc6bf16272a4b14fe7fb25e
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 kometa.py --read-only-config --run;
            env:
              TZ: *timeZone
            envFrom:
              - secretRef:
                  name: kometa-secret
            resources:
              requests:
                cpu: 100m
                memory: 2048M
              limits:
                memory: 8192M
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      config-file:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      tmpfs:
        type: emptyDir
        advancedMounts:
          kometa:
            app:
              - path: /config/logs
                subPath: logs
      # git:
      #   type: emptyDir # redeploy
      #   globalMounts:
      #     - path: /git
