---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr-1080p
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        type: deployment
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 6.0.1.10258@sha256:b67ac38b70e9f0d2aee0be31be27fd25d9d35ed1f7204d012fd05effabc395f5
              pullPolicy: IfNotPresent
            env:
              TZ: "America/Chicago"
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__APP__INSTANCENAME: "Radarr (1080p)"
              RADARR__SERVER__PORT: &port 80
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              limits:
                memory: 2Gi
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 100
            fsGroup: 100
            fsGroupChangePolicy: "OnRootMismatch"
            runAsNonRoot: true
    service:
      app:
        controller: radarr
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.armando.sh"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        existingClaim: *app
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "192.168.20.5"
            path: "/mnt/user/media"
        globalMounts:
          - path: "/media"
      tmp:
        type: emptyDir
